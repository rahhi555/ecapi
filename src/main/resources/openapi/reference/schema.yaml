openapi: 3.0.0
x-stoplight:
  id: 6qchn1idys5bx
info:
  title: PRUM EC APIスキーマ
  version: '1.0'
  description: PRUM ECのAPIスキーマです
  contact:
    name: rahhi555
servers:
  - url: 'http://localhost:8080'
tags:
  - name: opts
    description: 運用監視関連のAPI
  - name: users
    description: ユーザー関連のAPI
  - name: auth
    description: 認証関連のAPI
paths:
  /health:
    get:
      tags:
        - opts
      summary: ヘルスチェック
      operationId: healthCheck
      description: ヘルスチェック
      responses:
        '200':
          description: OK
  '/users/{id}':
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
        description: ユーザーid
    get:
      summary: ユーザー取得
      tags:
        - users
      operationId: getUser
      description: idからユーザーを取得する
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DTOUser'
  /auth/register:
    post:
      summary: ユーザー登録
      tags:
        - auth
      operationId: authRegister
      description: ユーザー登録する
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormRegister'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DTOAuthentication'
  /auth/authenticate:
    post:
      summary: ログイン
      operationId: login
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DTOAuthentication'
      tags:
        - auth
      description: ログイン
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormAuthenticate'
components:
  schemas:
    DTOUser:
      title: DTOUser
      x-stoplight:
        id: 9b10079769aaa
      type: object
      description: ユーザー情報
      properties:
        id:
          type: integer
          description: ユーザーid
          example: 1
        firstname:
          type: string
          description: 名前
          example: 太郎
          minLength: 1
        lastname:
          type: string
          description: 名字
          example: 太郎
          minLength: 1
        email:
          type: string
          description: メールアドレス
          example: test@example.com
          format: email
        role:
          $ref: '#/components/schemas/EnumRole'
      required:
        - id
        - firstname
        - lastname
        - email
        - role
    DTOAuthentication:
      title: DTOAuthentication
      description: 認証jwt
      type: object
      properties:
        token:
          type: string
          description: 認証jwt
          example: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ2ZW5kb3JAZXhhbXBsZS5jb20iLCJpYXQiOjE2OTA3MjAyNjUsImV4cCI6MTY5MDcyMTcwNX0.OG9PfPsWsnqgqu-HDA5tGtXZd98UgMayrpq6ObBbSNA
      required:
        - token
      x-stoplight:
        id: 0aff6be78e7e3
    FormRegister:
      title: FormRegister
      x-stoplight:
        id: 02be447f649a0
      type: object
      description: ユーザー登録フォーム
      properties:
        email:
          type: string
          format: email
          example: test@example.com
          description: メールアドレス
        password:
          type: string
          format: password
          example: password
          description: パスワード
        firstname:
          type: string
          example: 太郎
          minLength: 1
          description: 名前
        lastname:
          type: string
          example: 田中
          minLength: 1
          description: 名字
        role:
          $ref: '#/components/schemas/EnumRole'
      required:
        - email
        - password
        - firstname
        - lastname
        - role
    FormAuthenticate:
      title: FormAuthenticate
      x-stoplight:
        id: jfx7vquhdpnwn
      type: object
      description: ユーザーログインフォーム
      properties:
        email:
          type: string
          format: email
          example: test@example.com
          description: メールアドレス
        password:
          type: string
          format: password
          example: password
          description: パスワード
      required:
        - email
        - password
    EnumRole:
      title: EnumRole
      x-stoplight:
        id: b30130640ee35
      type: string
      enum:
        - VENDOR
        - CUSTOMER
      default: CUSTOMER
      example: VENDOR
      description: 'ユーザー権限(販売者:VENDOR,購入者:CUSTOMER)'
